{"version":3,"sources":["worklist/Input.js","worklist/List.js","worklist/TodoList.js","index.js"],"names":["Input","className","htmlFor","id","ref","inp","input","value","this","props","inpValue","type","onChange","handleChange","onClick","addTodo","Component","List","renderTodos","done","todos","map","todo","idx","toggle","checked","dangerouslySetInnerHTML","__html","title","delTodo","arr1","filter","item","arr2","length","TodoList","e","setState","target","state","index","newTodos","JSON","parse","stringify","localStorage","getItem","setItem","ReactDOM","render","document","getElementById"],"mappings":"6KAmBgBA,E,uKAhBF,IAAD,OACL,OACI,yBAAKC,UAAU,OACX,2BAAOC,QAAQ,OAAf,YACA,2BACIC,GAAG,MACHC,IAAK,SAAAC,GAAG,OAAE,EAAKC,MAAQD,GACvBE,MAAOC,KAAKC,MAAMC,SAClBC,KAAK,OACLC,SAAUJ,KAAKC,MAAMI,eAEzB,4BAAQC,QAASN,KAAKC,MAAMM,SAA5B,qB,GAZIC,aCCCC,E,4MACjBC,YAAc,SAACC,GACX,OAAO,EAAKV,MAAMW,MAAMC,KAAI,SAACC,EAAKC,GAC9B,GAAGJ,GAAMG,EAAKH,KACV,OAAO,4BACH,2BACIL,QAAS,kBAAI,EAAKL,MAAMe,OAAOD,IAC/BE,QAASN,EACTR,KAAK,aAET,0BAAMe,wBAAyB,CAACC,OAAOL,EAAKM,SAC5C,4BACId,QAAS,kBAAI,EAAKL,MAAMoB,QAAQN,KADpC,qB,uDASZ,IAAIO,EAAOtB,KAAKC,MAAMW,MAAMW,QAAQ,SAAAC,GAAI,OAAKA,EAAKb,QAC9Cc,EAAOzB,KAAKC,MAAMW,MAAMW,QAAQ,SAAAC,GAAI,OAAIA,EAAKb,QACjD,OACI,6BACA,uDACSW,EAAKI,QAEN,4BACK1B,KAAKU,aAAY,IAE9B,uDACSe,EAAKC,QAEN,4BACK1B,KAAKU,aAAY,S,GAlCRF,aCwEnBmB,E,kDArEX,aAAc,IAAD,8BACT,gBAMJtB,aAAe,SAACuB,GACZ,EAAKC,SAAS,CAAC3B,SAAS0B,EAAEE,OAAO/B,SARxB,EA0BbQ,QAAU,WACkB,IAArB,EAAKwB,MAAM7B,WAGd,EAAK2B,SAAS,CACVjB,MAAM,CACF,CACIQ,MAAO,EAAKW,MAAM7B,SAClBS,MAAM,IAHT,mBAKE,EAAKoB,MAAMnB,UAGtB,EAAKiB,SAAS,CAAC3B,SAAS,OAvCf,EA0CbmB,QAAU,SAACN,GACP,EAAKc,SAAS,CACVjB,MAAO,EAAKmB,MAAMnB,MAAMW,QAAO,SAACC,EAAKQ,GAAN,OAAcA,GAAOjB,QA5C/C,EA+CbC,OAAS,SAACgB,GACN,IAAIC,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,EAAKL,MAAMnB,QACpDqB,EAASD,GAAOrB,MAAQsB,EAASD,GAAOrB,KACxC,EAAKkB,SAAS,CACVjB,MAAOqB,KAjDX,EAAKF,MAAQ,CACT7B,SAAU,GACVU,MAAM,IAJD,E,gEAWT,IAAIA,EAAQyB,aAAaC,QAAQ,SAC9B1B,GACCZ,KAAK6B,SAAS,CACVjB,MAAOsB,KAAKC,MAAMvB,O,2CAKxBZ,KAAK+B,MAAM7B,UACTmC,aAAaE,QACT,QACAL,KAAKE,UAAUpC,KAAK+B,MAAMnB,U,+BAiClC,OACQ,6BACI,kBAAC,EAAD,CAAOV,SAAUF,KAAK+B,MAAM7B,SAAUG,aAAcL,KAAKK,aACrDE,QAASP,KAAKO,UAElB,kBAAC,EAAD,CAAMS,OAAQhB,KAAKgB,OAAQK,QAASrB,KAAKqB,QACvCT,MAAOZ,KAAK+B,MAAMnB,a,GA9DjBJ,aCMvBgC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.264f95e4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Input extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"box\">\r\n                <label htmlFor=\"inp\">todolist</label>\r\n                <input \r\n                    id='inp'\r\n                    ref={inp=>this.input = inp}\r\n                    value={this.props.inpValue} \r\n                    type=\"text\" \r\n                    onChange={this.props.handleChange}\r\n                />\r\n                <button onClick={this.props.addTodo}>添加</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default  Input;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class List extends Component {\r\n    renderTodos = (done)=>{\r\n        return this.props.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                        onClick={()=>this.props.toggle(idx)}\r\n                        checked={done} \r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick={()=>this.props.delTodo(idx)}\r\n                    >删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        let arr1 = this.props.todos.filter( item => !item.done);\r\n        let arr2 = this.props.todos.filter( item => item.done);\r\n        return (\r\n            <div>\r\n            <h2>\r\n                正在进行{arr1.length}\r\n            </h2>\r\n                    <ul>\r\n                        {this.renderTodos(false)}\r\n                    </ul>\r\n            <h2>\r\n                已经完成{arr2.length}\r\n            </h2>\r\n                    <ul>\r\n                        {this.renderTodos(true)}\r\n                    </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Input from './Input';\r\nimport List from './List';\r\n\r\n\r\nclass TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n       if(this.state.inpValue){\r\n            localStorage.setItem(\r\n                'todos',\r\n                JSON.stringify(this.state.todos)\r\n            )\r\n        }\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n\r\n    }\r\n    delTodo = (idx)=>{\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n                <div>\r\n                    <Input inpValue={this.state.inpValue} handleChange={this.handleChange}\r\n                        addTodo={this.addTodo}\r\n                    />  \r\n                    <List toggle={this.toggle} delTodo={this.delTodo}\r\n                      todos={this.state.todos}\r\n                    />\r\n                </div>  \r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Contral from './components/Contral';\n// import {Home} from './pages/Home';\n// import Demo01 from './components/Demo01';\n// import App from './pages/App';\n// import Hoc,{Detail} from './pages/Hoc';\n// import Hook from './pages/Hook'\n// import Context from './pages/content'\nimport TodoList from './worklist/TodoList';\n\nReactDOM.render(\n  <TodoList/>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//   <Context.Provider value='123'>\n//     <Hook/>\n//   </Context.Provider>,\n//   document.getElementById('root')\n// );\n\n// ReactDOM.render(\n//   <Hook/>,\n//   document.getElementById('root')\n// );\n\n\n// //导出两个\n// ReactDOM.render(\n//   <Hoo,><Hoc/><Detail/></Hook,>,\n//   document.getElementById('root')\n// );\n\n// ReactDOM.render(\n \n//   <App/>,\n//   document.getElementById('root')\n// );\n\n// // demo01\n// ReactDOM.render(\n \n//   <Demo01 name='123'/>,\n//   document.getElementById('root')\n// );\n\n// ReactDOM.render(\n//   <Contral/>,\n//   document.getElementById('root')\n// );\n\n //import $ from 'jquery';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from '.rviceWorker';\n\n// console.log($);\n// alt + shift + 上下键    复制一行\n// alt + 上下键   移动一行\n//按住ail ,鼠标点击\n\n//Ctrl+ shift + 上下键    选中\n\n// let List = (props)=>{\n//   return <ul>\n//     {\n//       props.data.map(\n//         (item)=><li key={item.id}>{item.title}</li>\n//       )\n//     }\n//   </ul>\n// }\n\n// class Home extends React.Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       data:[]\n//     }\n//     // this.handleClick = this.handleClick.bind(this)\n//   }\n//   componentDidMount(){\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then( ({data}) => {\n//       console.log(data);\n//       this.setState({data})\n//     })\n//   }\n//   getData = (page)=>{\n  // fetch('https://cnodejs.org/api/v1/topics?page='+page)\n  // .then(res=>res.json())\n  // .then( ({data}) => {\n  //   console.log(data);\n  //   this.setState({data})\n  // })\n//     console.log(page);\n//   }\n//   render(){\n//     const { data } = this.state;\n//     const btns = [1,2,3,4,5];\n//     return <div>\n//       {\n//         btns.map(\n//           (item)=>(\n//             <button \n//               key={item}\n//               onClick={()=>this.getData(item)}\n//             >\n//               {item}\n//             </button>\n//         ))\n//       }\n//       <List data={data}/>\n//     </div>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Home data='abc'/>,\n//   document.getElementById('root')\n// );\n\n// 组件声明\n// 函数组件\n// UI（展示）组件，木偶组件\n// function App(props){\n//   const { title, id } = props;\n//   return <div>\n//     <h1>App组件内容</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n// // 智能组件\n// class Demo extends React.Component{\n//   constructor(){\n//      super();\n//     //  声明状态\n//      this.state = {\n//        name: new Date().toLocaleString()\n//      }\n//      setInterval(()=>{\n//       this.setState({name:new Date().toLocaleString()})\n//      },1000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='app'/>\n//     </div>\n//   }\n// }\n\n// let List = (props)=>{\n//   return <ul>\n//     {\n//       props.data.map(\n//         (item)=><li key = {item.id}>{item.title}</li>\n//       )\n//     }\n//   </ul>\n// }\n\n// const Buttons = ()=>{\n//   const btns = [1,2,3,4,5];\n//   return <div>\n//     {\n//       btns.map((item)=><button key = {item}>{item}</button>)\n//     }\n//   </div>\n// }\n\n// class Home extends React.Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       data:[]\n//     }\n//   }\n//   componentDidMount(){\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then( ({data}) => {\n//       this.setState({data})\n//     })\n//   }\n//   render(){\n//     const { data } = this.state;\n//     return <div>\n//       <Buttons />\n//       <List data={data}/>\n//     </div>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Home data='abc'/>,\n//   document.getElementById('root')\n// );\n\n\n\n// const List = (props)=>{\n//   return <ul>\n//     {\n//       props.data.map(\n//         (item)=><li key = {item.id}>{item.title}</li>\n//         )\n//       }\n      \n//       </ul>\n// }\n\n\n\n// class Home extends React.Component{\n//   //构造函数\n//   constructor(){\n//     super();\n//     this.state = {\n//       data:[]\n//     }\n//     // setTimeout(()=>{\n//     //   this.setState({data:[5,6,7,8,9]})\n//     // },500)\n//     // fetch('https://cnodejs.org/api/v1/topics')\n//     // .then(res=>res.json())\n//     // .then(({data})=>{\n//     //  this.setState({data});\n//     // })\n//     console.log('data');\n//   }\n// componentDidMount(){\n//   fetch('https://cnodejs.org/api/v1/topics')\n//   .then(res=>res.json())\n//   .then(({data})=>{\n//    this.setState({data});\n//   })\n//   console.log('didmount');\n// }\n// //渲染\n//   render(){\n//     // const {data} = this.state;\n//     // return <ul>\n//     //   {\n//     //     this.state.data.map(\n//     //       (item)=><li key = {item.id}> {item.title}</li>\n//     //     )\n//     //   }\n//     // </ul>\n//     console.log('rander');\n//     const{data} = this.state;\n//     return<List data={data}/>\n    \n//   }\n// }\n\n// ReactDOM.render(\n//   <Home />,\n//   document.getElementById('root')\n// );\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // let ele = <h1 id='title'>hello react</h1>\n// //原理\n// // let ele = React.createElement(\n// //   'h1',\n// // {id:'title'},\n// // 'hello react'\n// // )\n\n// let ele = <h1 id=\"title\" className='tit'>\n  \n//   <div>hello</div>\n//   react\n//   </h1>;\n//   // let ele = React.createElement(\n// //   'h1',\n// //   {id:'title'},\n// //   React.createElement('div',{},'hello'),\n// //   'react'\n// // )\n\n\n\n// //将jsx对象渲染到DOM中\n// let ReactDOM = {\n//   render(eleObj,container){\n//     //解构\n//     const {type,props} = eleObj;\n//     //创建第一层节点\n//     let ele=document.createElement(type);\n//     //遍历属性对象，将属性添加到第一层节点对象上\n//     for(const prop in props){\n//       if(prop =='children'){\n//         //将第一层节点对象的子元素添加进去\n//         if(typeof props.children =='string'){\n//           const txtNode=document.createTextNode(props.children);\n//             ele.appendChild(txtNode);\n//             break;\n//         }//此判断是为了防止最后递归的props.children不是数组，那么foreach就不能用。\n//           props.children.forEach(child=>{\n//             if(typeof(child)=='string'){\n//               const txtNode=document.createTextNode(child);\n//               ele.appendChild(txtNode);\n//            }else{\n//              ReactDOM.render(child,ele);\n//            }    \n//           })\n//       }else{\n//           ele[prop]=props[prop];\n//       }\n//     }\n//     //将第一层DOM节点添加到\n//     container.appendChild(ele);\n//   }\n// }\n\n\n// console.log(ele);\n\n// ReactDOM.render(\n//   ele,\n//   document.getElementById('root')\n// );\n\n\n// ReactDOM.render(\n//   <h1>hello react</h1>,\n//   document.getElementById('root')\n// );\n\n\n// // 1、原生JS，DOM操作（jQ）\n// // 2、React：开发效率高、性能高\n// // 3、环境搭建、创建一个项目、运行\n// // 4、JSX语法 work offline and load faster, you can change\n// // // unregister() to register() below. Note this comes with some pitfalls.\n// // // Learn more about service workers: https://bit.ly/CRA-PWA\n// // // serviceWorker.unregister();\n\n\n"],"sourceRoot":""}